{"version":3,"file":"static/js/871.a79210e2.chunk.js","mappings":"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","sources":["components/AdminNavbar.js","pages/admin/Dashboard.js"],"sourcesContent":["import React from 'react';\nimport { Layout, Button } from 'antd';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport LogoutOutlined from '@ant-design/icons/lib/icons/LogoutOutlined';\n\nconst { Header } = Layout;\n\nconst AdminNavbar = () => {\n  const { logout } = useAuth();\n  const navigate = useNavigate();\n\n  const handleLogout = () => {\n    logout();\n    navigate('/');\n  };\n\n  return (\n    <Header style={{ \n      background: '#fff', \n      padding: '0 20px', \n      display: 'flex', \n      justifyContent: 'space-between',\n      alignItems: 'center',\n      boxShadow: '0 2px 8px rgba(0,0,0,0.1)'\n    }}>\n      <Link to=\"/admin\" style={{ \n        fontSize: '20px', \n        fontWeight: 'bold',\n        color: '#000'\n      }}>\n        Movie Admin\n      </Link>\n      <div style={{ display: 'flex', gap: '16px' }}>\n        <Link to=\"/admin\">\n          <Button type=\"text\">Dashboard</Button>\n        </Link>\n        <Link to=\"/admin/products\">\n          <Button type=\"text\">Products</Button>\n        </Link>\n        <Link to=\"/admin/orders\">\n          <Button type=\"text\">Orders</Button>\n        </Link>\n        <Link>\n        <Button \n          type=\"primary\" \n          danger\n          icon={<LogoutOutlined />}\n          onClick={handleLogout}\n        >\n          Logout\n        </Button>\n        </Link>\n      </div>\n    </Header>\n  );\n};\n\nexport default AdminNavbar;\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { Layout, Card, Row, Col, Typography, Space, Statistic, DatePicker } from 'antd';\nimport { ShoppingOutlined, DollarOutlined, UserOutlined } from '@ant-design/icons';\nimport { useProduct } from '../../contexts/ProductContext';\nimport AdminNavbar from '../../components/AdminNavbar';\nimport dayjs from 'dayjs';\n\nconst { Content } = Layout;\nconst { Title, Text } = Typography;\nconst { RangePicker } = DatePicker;\n\nconst Dashboard = () => {\n  const { orders, products } = useProduct();\n  const [dateRange, setDateRange] = useState([\n    dayjs().subtract(7, 'day'),\n    dayjs()\n  ]);\n\n  const filteredOrders = useMemo(() => {\n    if (!orders || !dateRange) return [];\n    \n    const [startDate, endDate] = dateRange;\n    return orders.filter(order => {\n      const orderDate = dayjs(order.date);\n      return orderDate.isAfter(startDate) && orderDate.isBefore(endDate.add(1, 'day'));\n    });\n  }, [orders, dateRange]);\n\n  const stats = useMemo(() => {\n    if (!filteredOrders.length) return {\n      totalOrders: 0,\n      totalRevenue: 0,\n      averageOrderValue: 0,\n      uniqueCustomers: 0\n    };\n\n    const totalOrders = filteredOrders.length;\n    const totalRevenue = filteredOrders.reduce((sum, order) => \n      sum + order.items.reduce((itemSum, item) => itemSum + (item.price * (item.quantity || 1)), 0), 0\n    );\n    const uniqueCustomers = new Set(filteredOrders.map(order => order.email)).size;\n\n    return {\n      totalOrders,\n      totalRevenue,\n      averageOrderValue: totalRevenue / totalOrders,\n      uniqueCustomers\n    };\n  }, [filteredOrders]);\n\n  // Calculate most sold movies\n  const mostSoldMovies = useMemo(() => {\n    const movieSales = {};\n    orders.forEach(order => {\n      order.items.forEach(item => {\n        if (!movieSales[item.id]) {\n          movieSales[item.id] = {\n            ...item,\n            totalSold: 0\n          };\n        }\n        movieSales[item.id].totalSold += (item.quantity || 1);\n      });\n    });\n    return Object.values(movieSales)\n      .sort((a, b) => b.totalSold - a.totalSold)\n      .slice(0, 6);\n  }, [orders]);\n\n  return (\n    <Layout style={{ minHeight: '100vh' }}>\n      <AdminNavbar />\n      <Content style={{ padding: '24px' }}>\n        <Row justify=\"space-between\" align=\"middle\" style={{ marginBottom: 24 }}>\n          <Col>\n            <Title level={2}>Dashboard Overview</Title>\n          </Col>\n          <Col>\n            <RangePicker\n              value={dateRange}\n              onChange={setDateRange}\n              allowClear={false}\n              style={{ width: 300 }}\n              disabledDate={current => current && current > dayjs().endOf('day')}\n            />\n          </Col>\n        </Row>\n\n        <Row gutter={[24, 24]}>\n          <Col xs={24} sm={12} lg={6}>\n            <Card>\n              <Statistic\n                title=\"Total Orders\"\n                value={stats.totalOrders}\n                prefix={<ShoppingOutlined />}\n                valueStyle={{ color: '#3f8600' }}\n              />\n            </Card>\n          </Col>\n          <Col xs={24} sm={12} lg={6}>\n            <Card>\n              <Statistic\n                title=\"Total Revenue\"\n                value={stats.totalRevenue}\n                precision={2}\n                prefix={<DollarOutlined />}\n                valueStyle={{ color: '#3f8600' }}\n              />\n            </Card>\n          </Col>\n          <Col xs={24} sm={12} lg={6}>\n            <Card>\n              <Statistic\n                title=\"Average Order Value\"\n                value={stats.averageOrderValue}\n                precision={2}\n                prefix={<DollarOutlined />}\n                valueStyle={{ color: '#3f8600' }}\n              />\n            </Card>\n          </Col>\n          <Col xs={24} sm={12} lg={6}>\n            <Card>\n              <Statistic\n                title=\"Unique Customers\"\n                value={stats.uniqueCustomers}\n                prefix={<UserOutlined />}\n                valueStyle={{ color: '#3f8600' }}\n              />\n            </Card>\n          </Col>\n        </Row>\n\n        <Card style={{ marginTop: 24 }}>\n          <Title level={4}>Most Sold Movies</Title>\n          <Row gutter={[16, 16]}>\n            {mostSoldMovies.map(movie => (\n              <Col xs={24} sm={12} md={8} lg={6} xl={4} key={movie.id}>\n                <Card\n                  hoverable\n                  cover={\n                    <img\n                      alt={movie.title}\n                      src={movie.image}\n                      style={{ height: 300, objectFit: 'cover' }}\n                    />\n                  }\n                >\n                  <Card.Meta\n                    title={movie.title}\n                    description={\n                      <Space direction=\"vertical\">\n                        <Text>Total Sold: {movie.totalSold}</Text>\n                        <Text>Revenue: ${(movie.price * movie.totalSold).toFixed(2)}</Text>\n                      </Space>\n                    }\n                  />\n                </Card>\n              </Col>\n            ))}\n          </Row>\n        </Card>\n      </Content>\n    </Layout>\n  );\n};\n\nexport default Dashboard;\n"],"names":["Header","Layout","AdminNavbar","logout","useAuth","navigate","useNavigate","_jsxs","style","background","padding","display","justifyContent","alignItems","boxShadow","children","_jsx","Link","to","fontSize","fontWeight","color","gap","Button","type","danger","icon","LogoutOutlined","onClick","handleLogout","Content","Title","Text","Typography","RangePicker","DatePicker","Dashboard","orders","products","useProduct","dateRange","setDateRange","useState","dayjs","subtract","filteredOrders","useMemo","startDate","endDate","filter","order","orderDate","date","isAfter","isBefore","add","stats","length","totalOrders","totalRevenue","averageOrderValue","uniqueCustomers","reduce","sum","items","itemSum","item","price","quantity","Set","map","email","size","mostSoldMovies","movieSales","forEach","id","_objectSpread","totalSold","Object","values","sort","a","b","slice","minHeight","Row","justify","align","marginBottom","Col","level","value","onChange","allowClear","width","disabledDate","current","endOf","gutter","xs","sm","lg","Card","Statistic","title","prefix","ShoppingOutlined","valueStyle","precision","DollarOutlined","UserOutlined","marginTop","movie","md","xl","hoverable","cover","alt","src","image","height","objectFit","Meta","description","Space","direction","toFixed"],"sourceRoot":""}